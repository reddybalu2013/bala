<channel version="3.6.1">
  <id>e0bd27ad-57a1-471c-8b94-57a7221caba3</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>new-aed-staging-channel</name>
  <description></description>
  <revision>10</revision>
  <sourceConnector version="3.6.1">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.js.JavaScriptReceiverProperties" version="3.6.1">
      <pluginProperties/>
      <pollConnectorProperties version="3.6.1">
        <pollingType>INTERVAL</pollingType>
        <pollOnStart>true</pollOnStart>
        <pollingFrequency>3600000</pollingFrequency>
        <pollingHour>0</pollingHour>
        <pollingMinute>0</pollingMinute>
        <cronJobs/>
        <pollConnectorPropertiesAdvanced>
          <weekly>true</weekly>
          <inactiveDays>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
            <boolean>false</boolean>
          </inactiveDays>
          <dayOfMonth>1</dayOfMonth>
          <allDay>true</allDay>
          <startingHour>8</startingHour>
          <startingMinute>0</startingMinute>
          <endingHour>17</endingHour>
          <endingMinute>0</endingMinute>
        </pollConnectorPropertiesAdvanced>
      </pollConnectorProperties>
      <sourceConnectorProperties version="3.6.1">
        <responseVariable>None</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>b76e69cc-3805-4dd3-81d4-376db4e14898</string>
            <string>volunteer-registry</string>
          </entry>
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <script>importPackage(Packages.org.apache.http.client);
importPackage(Packages.org.apache.http.client.methods);
importPackage(Packages.org.apache.http.impl.client);

//Initialize staging repository
var aedStagingRepo = getAedStagingRepo();
aedStagingRepo.open();
var formatter = new java.text.SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss.SSS&quot;);

//Query all AEDs
var implClassName = &quot;com.philips.hsc.external1.AedAccessImpl&quot;;
var date = getQueryDate();
var registrySettings = getRegistrySettings();
var token = getAccessToken(registrySettings);
var aeds = queryAeds(implClassName, date, registrySettings, token);

//Save AEDs to staging database
while (aeds.hasNext()) {
  var aed = aeds.next();
  saveAed(aedStagingRepo, aed);
}
aedStagingRepo.close();
return;

function getRegistrySettings() {
  var settingsStream = new java.io.FileInputStream(configurationMap.get(&quot;aed-registry-settings&quot;));
  var registrySettings = new com.philips.hsc.config.RegistrySettings(settingsStream);
  return registrySettings;
}

function getQueryDate() {
	try {
  		var queryDate = aedStagingRepo.getLastModifiedDate();
  		logger.info(&quot;Last updated date=&quot;+queryDate);
  		var date = formatter.parse(queryDate);
  		 return date;
	}catch(err){
		//If the database is empty
		logger.info(err);
		return null;
	}
}

function getAccessToken(registrySettings) {
  var httpClient = HttpClients.createDefault();
  var url = registrySettings.getUrl()+registrySettings.getLoginApiPath();
  var httpPost = new HttpPost(url);
  var loginClient = new Packages.com.philips.hsc.external.login.LoginClient(httpClient,httpPost);
  logger.info(&quot;user:&quot;+registrySettings.getUserName());
  var token = loginClient.logIn(registrySettings.getUserName(),registrySettings.getPassword());
  logger.info(token);
  return token;
}

function queryAeds(implClassName,date,registrySettings,token) {
  var aedProvider = new Packages.com.philips.hsc.external1.AedProvider(implClassName,date,registrySettings,token);
   var iterator;
  if(date==null){
  	logger.info(&quot;query all aeds&quot;);
   	iterator = aedProvider.allAeds();
  }else{
  	logger.info(&quot;query aeds since &quot;+date);
  	iterator=aedProvider.newAeds();
  }
  return iterator;
}

function getAedStagingRepo() {
  var stagingConfigStream = new java.io.FileInputStream(configurationMap.get(&quot;staging-settings&quot;));
  var aedStagingRepo = new Packages.com.philips.hsc.external.staging.AedStagingRepository(stagingConfigStream);	
  return aedStagingRepo;
}

function saveAed(aedStagingRepo,aed) {
  logger.info(aed);
  var mappingIdJson = getFhirMappingJson();
  saveRegistryItem(aedStagingRepo, aed, mappingIdJson);
}

function getFhirMappingJson() {
  var fhirMapping = new Packages.com.philips.hsc.dataaccess.FhirResourceIdMapperAed();
  fhirMapping.setBundleId(java.util.UUID.randomUUID().toString());
  fhirMapping.setDeviceId(java.util.UUID.randomUUID().toString());
  fhirMapping.setDeviceComponent1Id(java.util.UUID.randomUUID().toString());
  fhirMapping.setDeviceComponent2Id(java.util.UUID.randomUUID().toString());
  fhirMapping.setLocationId(java.util.UUID.randomUUID().toString());
  var mappingIdJson = fhirMapping.toJson();
  return mappingIdJson;
}

function getCurrentDate(){
	var currentDateTime=new java.util.Date();
	var date = formatter.format(currentDateTime);
	return date
}


function saveRegistryItem(aedStagingRepo,aed,mappingIdJson) {
  var registryItem = new Packages.com.philips.hsc.external.data.AedRegistryItem(aed);
  registryItem.setMappingIdentifier(mappingIdJson);
  registryItem.setDataStatus(&quot;new&quot;);
  registryItem.setProcessingStatus(&quot;unprocessed&quot;);
  registryItem.setCreatedDate((getCurrentDate()).toString());
  registryItem.setModifiedDate((getCurrentDate()).toString());
  aedStagingRepo.save(registryItem);
}</script>
    </properties>
    <transformer version="3.6.1">
      <elements/>
      <inboundDataType>JSON</inboundDataType>
      <outboundDataType>JSON</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.6.1">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.6.1">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.6.1">
        <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.6.1">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.6.1">
      <elements/>
    </filter>
    <transportName>JavaScript Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.6.1">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="3.6.1">
        <pluginProperties/>
        <destinationConnectorProperties version="3.6.1">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>b76e69cc-3805-4dd3-81d4-376db4e14898</string>
              <string>volunteer-registry</string>
            </entry>
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>return &quot;&quot;;</script>
      </properties>
      <transformer version="3.6.1">
        <elements/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.6.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.6.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.6.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.6.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.6.1">
        <elements/>
        <inboundDataType>JSON</inboundDataType>
        <outboundDataType>JSON</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.6.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.6.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.json.JSONDataTypeProperties" version="3.6.1">
          <batchProperties class="com.mirth.connect.plugins.datatypes.json.JSONBatchProperties" version="3.6.1">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.6.1">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.6.1">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.6.1">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>b76e69cc-3805-4dd3-81d4-376db4e14898</string>
        <string>volunteer-registry</string>
      </entry>
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1539319678325</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
      <pruningSettings>
        <archiveEnabled>true</archiveEnabled>
      </pruningSettings>
    </metadata>
  </exportData>
</channel>